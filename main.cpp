#include <iostream>
using namespace std;

// ==================================================================================================================
// 1. Написать функцию которая выводит массив double чисел на экран.
//    Параметры функции это сам массив и его размер. Вызвать эту функцию из main.
// ==================================================================================================================
void printArray(double* arr, size_t SIZE) {
	cout << "Массив 'double': ";

	for (int i = 0; i < SIZE; i++)
		cout << arr[i] << " ";
}
void task1() {
	cout << "TASK 1" << endl;

	const size_t SIZE{ 5 } ;
	double arr[SIZE]{ 1.1, 2.2, 3.3, 4.4, 5.5 };

	printArray(arr, SIZE);

	cout << endl << endl;
}
// ==================================================================================================================
//    Конец задания 1
// ==================================================================================================================


// ==================================================================================================================
// 2. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
//    Написать функцию, заменяющую в принятом массиве 0 на 1, 1 на 0. Выводить на экран массив до изменений и после.
// ==================================================================================================================
void swapElements(int* arr, size_t SIZE) {
	for (int i = 0; i < SIZE; i++) {
		arr[i] ^= 1;
	}
}

void task2() {
	cout << "TASK 2" << endl;

	const size_t SIZE{ 10 };
	int arr[SIZE]{ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 };

	cout << "До замены: ";

	for (auto i : arr)
		cout << i << " ";

	cout << endl;

	swapElements(arr, SIZE);

	cout << "После замены: ";

	for (auto i : arr)
		cout << i << " ";

	cout << endl << endl;
}
// ==================================================================================================================
//    Конец задания 2
// ==================================================================================================================


// ==================================================================================================================
// 3. Задать пустой целочисленный массив размером 8. 
//    Написать функцию, которая с помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22. Вывести массив на экран
// ==================================================================================================================
void initArray(int* arr) {
	const size_t TEMP_SIZE{ 8 };
	int tempArr[TEMP_SIZE]{ 1, 4, 7, 10, 13, 16, 19, 22 };

	for (int i : tempArr) {
		*arr = i;
		arr += 1;
	}
}

void task3() {
	cout << "TASK 3" << endl;

	const size_t SIZE{ 8 };
	int arr[SIZE];

	initArray(arr);

	cout << "Массив: ";

	for (int i : arr) 
		cout << i << " ";

	cout << endl << endl;
}
// ==================================================================================================================
//    Конец задания 3
// ==================================================================================================================


// ==================================================================================================================
// 4. Написать функцию, которой на вход подаётся одномерный массив и число n (может быть положительным, или отрицательным),
//    при этом метод должен циклически сместить все элементы массива на n позиций.
// ==================================================================================================================
namespace task4_ns{
	const size_t SIZE = 10; // Я не хотел выносить SIZE как глобальную переменную
						    // Лучше этого не придумал

	void moveElements(int* arr, int n) {
		int tempArray[SIZE];

		for (int i = 0; i < SIZE; i++)
			tempArray[i] = arr[i];

		for (int i = 0; i < SIZE; i++) {
			int index = ((i + n) < 0) ? (n + i + SIZE) : ((n + i) % SIZE);
			arr[index] = tempArray[i];
		}

	}

	void printArr(int* arr) {
		cout << "Массив: ";

		for (int i = 0; i < SIZE; i++) {
			cout << arr[i] << " ";
		}

		cout << endl;
	}

	void initArr(int* arr) {
		for (int i = 0; i < SIZE; i++) {
			arr[i] = i + 1;
		}
	}
}

void task4() {
	cout << "TASK 4" << endl;

	int arr[task4_ns::SIZE];
	task4_ns::initArr(arr);
	
	int n = 5;
	cout << "Число n: " << n << endl;

	task4_ns::printArr(arr);
	task4_ns::moveElements(arr, n);
	task4_ns::printArr(arr);

	cout << endl << endl;
}
// ==================================================================================================================
//    Конец задания 4
// ==================================================================================================================


// ==================================================================================================================
// 5. Написать функцию, которой передается не пустой одномерный целочисленный массив, 
//    она должна вернуть истину если в массиве есть место, в котором сумма левой и правой части массива равны. 
//    Примеры: checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance ([2, 1, 1, 2, 1]) → false, 
//    checkBalance ([10, || 1, 2, 3, 4]) → true. 
//    Абстрактная граница показана символами ||, эти символы в массив не входят.
// ==================================================================================================================
bool checkBalance(int* arr, size_t SIZE) {
	int lsum = 0;
	int rsum = 0;

	for (int i = 0; i < SIZE; i++) {
		rsum += arr[i];
	}

	for (int i = 0; i < SIZE; i++) {
		lsum += arr[i];
		rsum -= arr[i];

		if (lsum == rsum) {
			return true;
		}
	}

	return false;
}

void printArr(int* arr, size_t SIZE) {
	cout << "Массив: ";

	for (int i = 0; i < SIZE; i++) {
		cout << arr[i] << " ";
	}

	cout << endl;
}

void task5() {
	cout << "TASK5" << endl;

	const size_t SIZE = 5;
	int arr1[SIZE]{ 1, 1, 1, 2, 1 }; // true
	int arr2[SIZE]{ 2, 1, 1, 2, 1 }; // false
	int arr3[SIZE]{ 10, 1, 2, 3, 4 }; // true

	printArr(arr1, SIZE);
	cout << "checkBalance(arr): " << (checkBalance(arr1, SIZE) ? "true" : "false") << endl;

	printArr(arr2, SIZE);
	cout << "checkBalance(arr): " << (checkBalance(arr2, SIZE) ? "true" : "false") << endl;

	printArr(arr3, SIZE);
	cout << "checkBalance(arr): " << (checkBalance(arr3, SIZE) ? "true" : "false");

	cout << endl << endl;
}
// ==================================================================================================================
//    Конец задания 5
// ==================================================================================================================


int main() {
	setlocale(LC_ALL, "rus");

	task1();
	task2();
	task3();
	task4();
	task5();

	return 0;
}